--------------------------------------------------------------------------------

Box Model
=> html태그가 화면에서 상자모양으로 보이는 것을 모델링
=> 요소는 width와 height 스타일 속성을 가진다.
=> Box Model 표준은 1,2,3의 레벨을 가진다.

--------------------------------------------------------------------------------

width와 height 스타일 속성을
=> HTML요소의 너비와 높이를 의미하는 스타일 속성
=> keyword나 단위값을 설정한다.

/* DivTest 실습 */
=> height를 지정하면 요소의 높이를 결정가능
=> 값을 안 넣는다면 auto로 자식에 의해 결정

--------------------------------------------------------------------------------

HTML 관점에서는 부모, 자식관계로 관계를 표현하지만
CSS 관점에서는 컨테이너/콘텐츠로 표현한다.

컨테이너와 콘텐츠 사이에는 padding과 border라는 
간격으로 구성이 되어있다.

box-sizing을 통해 컨테이너 크기 결정법을 설정

기본적으로 padding과 border를 제외한 영역을 
컨테이너의 크기로 본다. (content-box)

그러나 보통 reset을 사용하여 border-box로 설정

--------------------------------------------------------------------------------

캐스케이딩
=> 부모에 설정된 css 속성이 자식에게 적용용되는 것
=> 위에서 아래로 물이 흘러내린다.
=> 많은 속성이 unset이나 inherit로 값이 설정되어 있음

--------------------------------------------------------------------------------

뷰포트
=> 웹페이지에서 사용자가 볼 수 있는 영역
=> 모바일, 태블릿, 데스크톱등의 브라우져가 동작하는
     장치의 화면크기가 달라서 생긴 개념

=> vw, vh라는 값으로 크기를 표현할 수 있다. 
=> 1 ~ 100의 값을 가지며 퍼센센트의 개념이다.

=> w-screen, h-screen 클래스명으로 
     100vw, 100vh를 적용가능하다.
=> w-full, h-full 클래스명으로 100%를 적용가능


이외에도 너비와 높이이와 관련된 여러개의 클래스 지원

숫자의 단위는 rem이다. 증가할때마다 0.25rem씩 변동
=> w-{number}
=> h-{number}
=> p-{number}
=> m-{number}

퍼센트를 나타내기 위한 표기법
=> w-{분자/분모}
=> h-{분자/분모}
=> w-1/2    => width 50% 적용

--------------------------------------------------------------------------------

=> img는 html중 유일하게 width, height attribute속성을 지원
=> 이미지를 가로,세로 화면 비율에 맞춰 화면에 표시한다.

/* ImageTest 실습 */
=> 처음에 400, 400400영역을 차지하고 있다.
=> 이미지가 로드되면 높이가 줄어듬
=> 이미지가 왜곡곡되어 보이지 않게 브라우져가 height를 재계산

/* BackgroundImageTest 실습  */

background-size
=> auto                => bg-auto              
=> cover              => bg-cover
=> bg-contain     => bg-contain

/* AvatarTest */

--------------------------------------------------------------------------------

display
=> HTML요소의 layout를 결정

=> 수평으로 배치되는 요소는 inline
  => 더이상 수평으로 배치할 수없으면 줄바꿈
  => 명시적으로 width, height 설정 불가능

=> 수직으로 배치되는 요소는 block
  => width, height를 명시가능

=> inline-block은 둘의 특성을  결합
  => 기본적으로 inline과 같으나 width 명시가능

--------------------------------------------------------------------------------

/* OverlayTest 실습  */

--------------------------------------------------------------------------------