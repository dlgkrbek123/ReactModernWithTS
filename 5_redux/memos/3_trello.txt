---------------------------------------------------------------------------------

칸반 : 시각신호
칸반보드 : 작업을 시각적으로 표시해서 프로젝트 관리를 쉽게함

---------------------------------------------------------------------------------

브라우저는 드래그 앤 드롭방식으로 HTML 요소의 위치를 변경하는 기능을 제공
=> react-dnd 패키지로 쉽게 사용하자
=> 컨텍스트 기반으로 Provider를 사용

> npm i react-dnd react-dnd-html5-backend
> npm i -D @types/react-dnd
> npm i --legacy-peer-deps react-beautiful-dnd
> npm i -D @types/react-beautiful-dnd

---------------------------------------------------------------------------------

useDrop이라는 hooks를 제공
drop(DOM) 메소드를 사용

const [_, drop] = useDrop(()=> {
  accept: 'card', // 드래그 대상
})


useDrag

const [{ isDragging }, drag] = useDrag({
  type: 'card',
  item: () => ({
    id, index 
  }),
  collect: (monitor: any) => ({
    isDragging: monitor.isDragging()
  })
})

---------------------------------------------------------------------------------

객체의 프로퍼티에 접근하기 위해 색인 연산자를 사용한다.
속성이름을 잘못 기입하는등의 실수를 할 수 있다.
따라서 TS는 색인연산자의 사용을 막고 Record타입을 쓰게 한다.

  card['uuid']

---------------------------------------------------------------------------------